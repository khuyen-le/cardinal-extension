"0","df.raw_exp1 <- df.raw_exp1 %>%"
"0","  group_by(pid) %>%"
"0","  mutate(id = UUIDgenerate()) %>%"
"0","  ungroup() %>%"
"0","  select(id, dot, dob, gender, primary_lang, is_bilingual,"
"0","         stim_set, highest_count, knower_level, "
"0","         trial, magnitude, set_chosen, "
"0","         count, correction_after_prompt, "
"0","         set_asked, n_bunnies, n_lions) %>%"
"0","  mutate(age_months = interval(mdy(dob), mdy(dot)) %/% months(1), "
"0","         age_years = interval(mdy(dob), mdy(dot)) %/% years(1), "
"0","         age_years_cont = interval(mdy(dob), mdy(dot)) %/% days(1) / 365, "
"0","         age_zscored = (age_years_cont - mean(age_years_cont)) / sd(age_years_cont)) %>%"
"0","  mutate(knower_level_cp_subset = ifelse(knower_level == ""CP"", ""CP"", ""subset"")) %>%"
"0","  mutate(final_count = ifelse(!is.na(correction_after_prompt), correction_after_prompt, count))"
"0",""
"0","df.ppt <- df.raw_exp1 %>% "
"0","  group_by(id, age_months, age_years, age_years_cont, age_zscored,"
"0","           gender, primary_lang, is_bilingual,"
"0","           stim_set, highest_count, knower_level, knower_level_cp_subset) %>%"
"0","  summarise()"
"2","`summarise()` has grouped output by 'id', 'age_months', 'age_years', 'age_years_cont', 'age_zscored', 'gender', 'primary_lang', 'is_bilingual', 'stim_set', 'highest_count', 'knower_level'. You can override using the `.groups` argument."
"0","write.csv(df.ppt, ""../../../data/exp1/PROCESSED_DATA/exp1_ppt.csv"", row.names = FALSE)"
